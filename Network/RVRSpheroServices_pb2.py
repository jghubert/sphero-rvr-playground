# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: RVRSpheroServices.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import SphereRVRDataTypes_pb2 as SphereRVRDataTypes__pb2
try:
  Accelerometer__pb2 = SphereRVRDataTypes__pb2.Accelerometer__pb2
except AttributeError:
  Accelerometer__pb2 = SphereRVRDataTypes__pb2.Accelerometer_pb2
try:
  AmbientLight__pb2 = SphereRVRDataTypes__pb2.AmbientLight__pb2
except AttributeError:
  AmbientLight__pb2 = SphereRVRDataTypes__pb2.AmbientLight_pb2
try:
  ColorSensor__pb2 = SphereRVRDataTypes__pb2.ColorSensor__pb2
except AttributeError:
  ColorSensor__pb2 = SphereRVRDataTypes__pb2.ColorSensor_pb2
try:
  CoreTime__pb2 = SphereRVRDataTypes__pb2.CoreTime__pb2
except AttributeError:
  CoreTime__pb2 = SphereRVRDataTypes__pb2.CoreTime_pb2
try:
  Gyroscope__pb2 = SphereRVRDataTypes__pb2.Gyroscope__pb2
except AttributeError:
  Gyroscope__pb2 = SphereRVRDataTypes__pb2.Gyroscope_pb2
try:
  IMU__pb2 = SphereRVRDataTypes__pb2.IMU__pb2
except AttributeError:
  IMU__pb2 = SphereRVRDataTypes__pb2.IMU_pb2
try:
  Locator__pb2 = SphereRVRDataTypes__pb2.Locator__pb2
except AttributeError:
  Locator__pb2 = SphereRVRDataTypes__pb2.Locator_pb2
try:
  Quaternion__pb2 = SphereRVRDataTypes__pb2.Quaternion__pb2
except AttributeError:
  Quaternion__pb2 = SphereRVRDataTypes__pb2.Quaternion_pb2
try:
  Speed__pb2 = SphereRVRDataTypes__pb2.Speed__pb2
except AttributeError:
  Speed__pb2 = SphereRVRDataTypes__pb2.Speed_pb2
try:
  Velocity__pb2 = SphereRVRDataTypes__pb2.Velocity__pb2
except AttributeError:
  Velocity__pb2 = SphereRVRDataTypes__pb2.Velocity_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='RVRSpheroServices.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x17RVRSpheroServices.proto\x1a\x18SphereRVRDataTypes.proto2\xdc\x03\n\x10RVRSpheroService\x12\x39\n\x10GetAccelerometer\x12\x15.AccelerometerRequest\x1a\x0e.Accelerometer\x12\x36\n\x0fGetAmbientLight\x12\x14.AmbientLightRequest\x1a\r.AmbientLight\x12\x33\n\x0eGetColorSensor\x12\x13.ColorSensorRequest\x1a\x0c.ColorSensor\x12*\n\x0bGetCoreTime\x12\x10.CoreTimeRequest\x1a\t.CoreTime\x12-\n\x0cGetGyroscope\x12\x11.GyroscopeRequest\x1a\n.Gyroscope\x12\x1b\n\x06GetIMU\x12\x0b.IMURequest\x1a\x04.IMU\x12\'\n\nGetLocator\x12\x0f.LocatorRequest\x1a\x08.Locator\x12\x30\n\rGetQuaternion\x12\x12.QuaternionRequest\x1a\x0b.Quaternion\x12!\n\x08GetSpeed\x12\r.SpeedRequest\x1a\x06.Speed\x12*\n\x0bGetVelocity\x12\x10.VelocityRequest\x1a\t.Velocityb\x06proto3'
  ,
  dependencies=[SphereRVRDataTypes__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_RVRSPHEROSERVICE = _descriptor.ServiceDescriptor(
  name='RVRSpheroService',
  full_name='RVRSpheroService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=54,
  serialized_end=530,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetAccelerometer',
    full_name='RVRSpheroService.GetAccelerometer',
    index=0,
    containing_service=None,
    input_type=Accelerometer__pb2._ACCELEROMETERREQUEST,
    output_type=Accelerometer__pb2._ACCELEROMETER,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetAmbientLight',
    full_name='RVRSpheroService.GetAmbientLight',
    index=1,
    containing_service=None,
    input_type=AmbientLight__pb2._AMBIENTLIGHTREQUEST,
    output_type=AmbientLight__pb2._AMBIENTLIGHT,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetColorSensor',
    full_name='RVRSpheroService.GetColorSensor',
    index=2,
    containing_service=None,
    input_type=ColorSensor__pb2._COLORSENSORREQUEST,
    output_type=ColorSensor__pb2._COLORSENSOR,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetCoreTime',
    full_name='RVRSpheroService.GetCoreTime',
    index=3,
    containing_service=None,
    input_type=CoreTime__pb2._CORETIMEREQUEST,
    output_type=CoreTime__pb2._CORETIME,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetGyroscope',
    full_name='RVRSpheroService.GetGyroscope',
    index=4,
    containing_service=None,
    input_type=Gyroscope__pb2._GYROSCOPEREQUEST,
    output_type=Gyroscope__pb2._GYROSCOPE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetIMU',
    full_name='RVRSpheroService.GetIMU',
    index=5,
    containing_service=None,
    input_type=IMU__pb2._IMUREQUEST,
    output_type=IMU__pb2._IMU,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetLocator',
    full_name='RVRSpheroService.GetLocator',
    index=6,
    containing_service=None,
    input_type=Locator__pb2._LOCATORREQUEST,
    output_type=Locator__pb2._LOCATOR,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetQuaternion',
    full_name='RVRSpheroService.GetQuaternion',
    index=7,
    containing_service=None,
    input_type=Quaternion__pb2._QUATERNIONREQUEST,
    output_type=Quaternion__pb2._QUATERNION,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetSpeed',
    full_name='RVRSpheroService.GetSpeed',
    index=8,
    containing_service=None,
    input_type=Speed__pb2._SPEEDREQUEST,
    output_type=Speed__pb2._SPEED,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetVelocity',
    full_name='RVRSpheroService.GetVelocity',
    index=9,
    containing_service=None,
    input_type=Velocity__pb2._VELOCITYREQUEST,
    output_type=Velocity__pb2._VELOCITY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_RVRSPHEROSERVICE)

DESCRIPTOR.services_by_name['RVRSpheroService'] = _RVRSPHEROSERVICE

# @@protoc_insertion_point(module_scope)
