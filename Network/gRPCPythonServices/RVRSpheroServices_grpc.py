# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: RVRSpheroServices.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import SensorData_pb2
import RVRSpheroServices_pb2


class RVRSpheroServiceBase(abc.ABC):

    @abc.abstractmethod
    async def UpdateSensorData(self, stream: 'grpclib.server.Stream[SensorData_pb2.SensorDataRequest, SensorData_pb2.SensorData]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/RVRSpheroService/UpdateSensorData': grpclib.const.Handler(
                self.UpdateSensorData,
                grpclib.const.Cardinality.UNARY_UNARY,
                SensorData_pb2.SensorDataRequest,
                SensorData_pb2.SensorData,
            ),
        }


class RVRSpheroServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.UpdateSensorData = grpclib.client.UnaryUnaryMethod(
            channel,
            '/RVRSpheroService/UpdateSensorData',
            SensorData_pb2.SensorDataRequest,
            SensorData_pb2.SensorData,
        )
